(function (a) {
    a.uniform = {
        options: {
            selectClass: "selector",
            radioClass: "radio",
            checkboxClass: "checker",
            fileClass: "uploader",
            filenameClass: "filename",
            fileBtnClass: "action",
            fileDefaultText: "No file selected",
            fileBtnText: "Choose File",
            checkedClass: "checked",
            focusClass: "focus",
            disabledClass: "disabled",
            buttonClass: "button",
            activeClass: "active",
            hoverClass: "hover",
            useID: true,
            idPrefix: "uniform",
            resetSelector: false,
            autoHide: true,
            selectMaxChars: false
        },
        elements: []
    };
    if (a.browser.msie && a.browser.version < 7) {
        a.support.selectOpacity = false
    } else {
        a.support.selectOpacity = true
    }
    a.fn.uniform = function (m) {
        m = a.extend(a.uniform.options, m);
        var d = this;
        if (m.resetSelector != false) {
            a(m.resetSelector).mouseup(function () {
                function n() {
                    a.uniform.update(d)
                }
                setTimeout(n, 10)
            })
        }

        function l(n) {
            $el = a(n);
            $el.addClass($el.attr("type"));
            b(n)
        }

        function g(n) {
            a(n).addClass("uniform");
            b(n)
        }

        function k(q) {
            var o = a(q);
            var r = a("<div>"),
                n = a("<span>");
            r.addClass(m.buttonClass);
            if (m.useID && o.attr("id") != "") {
                r.attr("id", m.idPrefix + "-" + o.attr("id"))
            }
            var p;
            if (o.is("a") || o.is("button")) {
                p = o.text()
            } else {
                if (o.is(":submit") || o.is(":reset") || o.is("input[type=button]")) {
                    p = o.attr("value")
                }
            }
            p = p == "" ? o.is(":reset") ? "Reset" : "Submit" : p;
            n.html(p);
            o.css("opacity", 0);
            o.wrap(r);
            o.wrap(n);
            r = o.closest("div");
            n = o.closest("span");
            if (o.is(":disabled")) {
                r.addClass(m.disabledClass)
            }
            r.bind({
                "mouseenter.uniform": function () {
                    r.addClass(m.hoverClass)
                },
                "mouseleave.uniform": function () {
                    r.removeClass(m.hoverClass);
                    r.removeClass(m.activeClass)
                },
                "mousedown.uniform touchbegin.uniform": function () {
                    r.addClass(m.activeClass)
                },
                "mouseup.uniform touchend.uniform": function () {
                    r.removeClass(m.activeClass)
                },
                "click.uniform touchend.uniform": function (t) {
                    if (a(t.target).is("span") || a(t.target).is("div")) {
                        if (q[0].dispatchEvent) {
                            var s = document.createEvent("MouseEvents");
                            s.initEvent("click", true, true);
                            q[0].dispatchEvent(s)
                        } else {
                            q[0].click()
                        }
                    }
                }
            });
            q.bind({
                "focus.uniform": function () {
                    r.addClass(m.focusClass)
                },
                "blur.uniform": function () {
                    r.removeClass(m.focusClass)
                }
            });
            a.uniform.noSelect(r);
            b(q)
        }

        function e(q) {
            var o = a(q);
            var r = a("<div />"),
                n = a("<span />");
            if (!o.css("display") == "none" && m.autoHide) {
                r.hide()
            }
            r.addClass(m.selectClass);
            if (m.useID && q.attr("id") != "") {
                r.attr("id", m.idPrefix + "-" + q.attr("id"))
            }
            var p = q.find(":selected:first");
            if (p.length == 0) {
                p = q.find("option:first")
            }
            n.html((0 < m.selectMaxChars ? p.html().substr(0, m.selectMaxChars) + (p.html().length > (m.selectMaxChars + 4) ? " ..." : "") : p.html()));
            q.css("opacity", 0);
            q.wrap(r);
            q.before(n);
            r = q.parent("div");
            n = q.siblings("span");
            q.bind({
                "change.uniform": function () {
                    var s = q.find(":selected").html();
                    n.text(0 < m.selectMaxChars ? s.substr(0, m.selectMaxChars) + (s.length > (m.selectMaxChars + 4) ? " ..." : "") : s);
                    r.removeClass(m.activeClass)
                },
                "focus.uniform": function () {
                    r.addClass(m.focusClass)
                },
                "blur.uniform": function () {
                    r.removeClass(m.focusClass);
                    r.removeClass(m.activeClass)
                },
                "mousedown.uniform touchbegin.uniform": function () {
                    r.addClass(m.activeClass)
                },
                "mouseup.uniform touchend.uniform": function () {
                    r.removeClass(m.activeClass)
                },
                "click.uniform touchend.uniform": function () {
                    r.removeClass(m.activeClass)
                },
                "mouseenter.uniform": function () {
                    r.addClass(m.hoverClass)
                },
                "mouseleave.uniform": function () {
                    r.removeClass(m.hoverClass);
                    r.removeClass(m.activeClass)
                },
                "keyup.uniform": function () {
                    var s = q.find(":selected").html();
                    n.text(0 < m.selectMaxChars ? s.substr(0, m.selectMaxChars) + (s.length > (m.selectMaxChars + 4) ? " ..." : "") : s)
                }
            });
            if (a(q).attr("disabled")) {
                r.addClass(m.disabledClass)
            }
            a.uniform.noSelect(n);
            b(q)
        }

        function f(p) {
            var o = a(p);
            var q = a("<div />"),
                n = a("<span />");
            if (!o.css("display") == "none" && m.autoHide) {
                q.hide()
            }
            q.addClass(m.checkboxClass);
            if (m.useID && p.attr("id") != "") {
                q.attr("id", m.idPrefix + "-" + p.attr("id"))
            }
            a(p).wrap(q);
            a(p).wrap(n);
            n = p.parent();
            q = n.parent();
            a(p).css("opacity", 0).bind({
                "focus.uniform": function () {
                    q.addClass(m.focusClass)
                },
                "blur.uniform": function () {
                    q.removeClass(m.focusClass)
                },
                "click.uniform touchend.uniform": function () {
                    if (!a(p).attr("checked")) {
                        n.removeClass(m.checkedClass)
                    } else {
                        n.addClass(m.checkedClass)
                    }
                },
                "mousedown.uniform touchbegin.uniform": function () {
                    q.addClass(m.activeClass)
                },
                "mouseup.uniform touchend.uniform": function () {
                    q.removeClass(m.activeClass)
                },
                "mouseenter.uniform": function () {
                    q.addClass(m.hoverClass)
                },
                "mouseleave.uniform": function () {
                    q.removeClass(m.hoverClass);
                    q.removeClass(m.activeClass)
                }
            });
            if (a(p).attr("checked")) {
                n.addClass(m.checkedClass)
            }
            if (a(p).attr("disabled")) {
                q.addClass(m.disabledClass)
            }
            b(p)
        }

        function c(p) {
            var o = a(p);
            var q = a("<div />"),
                n = a("<span />");
            if (!o.css("display") == "none" && m.autoHide) {
                q.hide()
            }
            q.addClass(m.radioClass);
            if (m.useID && p.attr("id") != "") {
                q.attr("id", m.idPrefix + "-" + p.attr("id"))
            }
            a(p).wrap(q);
            a(p).wrap(n);
            n = p.parent();
            q = n.parent();
            a(p).css("opacity", 0).bind({
                "focus.uniform": function () {
                    q.addClass(m.focusClass)
                },
                "blur.uniform": function () {
                    q.removeClass(m.focusClass)
                },
                "click.uniform touchend.uniform": function () {
                    if (!a(p).attr("checked")) {
                        n.removeClass(m.checkedClass)
                    } else {
                        var r = m.radioClass.split(" ")[0];
                        a("." + r + " span." + m.checkedClass + ":has([name='" + a(p).attr("name") + "'])").removeClass(m.checkedClass);
                        n.addClass(m.checkedClass)
                    }
                },
                "mousedown.uniform touchend.uniform": function () {
                    if (!a(p).is(":disabled")) {
                        q.addClass(m.activeClass)
                    }
                },
                "mouseup.uniform touchbegin.uniform": function () {
                    q.removeClass(m.activeClass)
                },
                "mouseenter.uniform touchend.uniform": function () {
                    q.addClass(m.hoverClass)
                },
                "mouseleave.uniform": function () {
                    q.removeClass(m.hoverClass);
                    q.removeClass(m.activeClass)
                }
            });
            if (a(p).attr("checked")) {
                n.addClass(m.checkedClass)
            }
            if (a(p).attr("disabled")) {
                q.addClass(m.disabledClass)
            }
            b(p)
        }

        function h(s) {
            var q = a(s);
            var t = a("<div />"),
                r = a("<span>" + m.fileDefaultText + "</span>"),
                o = a("<span>" + m.fileBtnText + "</span>");
            if (!q.css("display") == "none" && m.autoHide) {
                t.hide()
            }
            t.addClass(m.fileClass);
            r.addClass(m.filenameClass);
            o.addClass(m.fileBtnClass);
            if (m.useID && q.attr("id") != "") {
                t.attr("id", m.idPrefix + "-" + q.attr("id"))
            }
            q.wrap(t);
            q.after(o);
            q.after(r);
            t = q.closest("div");
            r = q.siblings("." + m.filenameClass);
            o = q.siblings("." + m.fileBtnClass);
            if (!q.attr("size")) {
                var n = t.width();
                q.attr("size", n / 10)
            }
            var p = function () {
                var u = q.val();
                if (u === "") {
                    u = m.fileDefaultText
                } else {
                    u = u.split(/[\/\\]+/);
                    u = u[(u.length - 1)]
                }
                r.text(u)
            };
            p();
            q.css("opacity", 0).bind({
                "focus.uniform": function () {
                    t.addClass(m.focusClass)
                },
                "blur.uniform": function () {
                    t.removeClass(m.focusClass)
                },
                "mousedown.uniform": function () {
                    if (!a(s).is(":disabled")) {
                        t.addClass(m.activeClass)
                    }
                },
                "mouseup.uniform": function () {
                    t.removeClass(m.activeClass)
                },
                "mouseenter.uniform": function () {
                    t.addClass(m.hoverClass)
                },
                "mouseleave.uniform": function () {
                    t.removeClass(m.hoverClass);
                    t.removeClass(m.activeClass)
                }
            });
            if (a.browser.msie) {
                q.bind("click.uniform.ie7", function () {
                    setTimeout(p, 0)
                })
            } else {
                q.bind("change.uniform", p)
            } if (q.attr("disabled")) {
                t.addClass(m.disabledClass)
            }
            a.uniform.noSelect(r);
            a.uniform.noSelect(o);
            b(s)
        }
        a.uniform.restore = function (n) {
            if (n == undefined) {
                n = a(a.uniform.elements)
            }
            a(n).each(function () {
                if (a(this).is(":checkbox")) {
                    a(this).unwrap().unwrap()
                } else {
                    if (a(this).is("select")) {
                        a(this).siblings("span").remove();
                        a(this).unwrap()
                    } else {
                        if (a(this).is(":radio")) {
                            a(this).unwrap().unwrap()
                        } else {
                            if (a(this).is(":file")) {
                                a(this).siblings("span").remove();
                                a(this).unwrap()
                            } else {
                                if (a(this).is("button, :submit, :reset, a, input[type='button']")) {
                                    a(this).unwrap().unwrap()
                                }
                            }
                        }
                    }
                }
                a(this).unbind(".uniform");
                a(this).css("opacity", "1");
                var o = a.inArray(a(n), a.uniform.elements);
                a.uniform.elements.splice(o, 1)
            })
        };

        function b(n) {
            n = a(n).get();
            if (n.length > 1) {
                a.each(n, function (o, p) {
                    a.uniform.elements.push(p)
                })
            } else {
                a.uniform.elements.push(n)
            }
        }
        a.uniform.noSelect = function (n) {
            function o() {
                return false
            }
            a(n).each(function () {
                this.onselectstart = this.ondragstart = o;
                a(this).mousedown(o).css({
                    MozUserSelect: "none"
                })
            })
        };
        a.uniform.update = function (n) {
            if (n == undefined) {
                n = a(a.uniform.elements)
            }
            n = a(n);
            n.each(function () {
                var p = a(this);
                if (p.is("select")) {
                    var o = p.siblings("span");
                    var r = p.parent("div");
                    r.removeClass(m.hoverClass + " " + m.focusClass + " " + m.activeClass);
                    o.html(p.find(":selected").html());
                    if (p.is(":disabled")) {
                        r.addClass(m.disabledClass)
                    } else {
                        r.removeClass(m.disabledClass)
                    }
                } else {
                    if (p.is(":checkbox")) {
                        var o = p.closest("span");
                        var r = p.closest("div");
                        r.removeClass(m.hoverClass + " " + m.focusClass + " " + m.activeClass);
                        o.removeClass(m.checkedClass);
                        if (p.is(":checked")) {
                            o.addClass(m.checkedClass)
                        }
                        if (p.is(":disabled")) {
                            r.addClass(m.disabledClass)
                        } else {
                            r.removeClass(m.disabledClass)
                        }
                    } else {
                        if (p.is(":radio")) {
                            var o = p.closest("span");
                            var r = p.closest("div");
                            r.removeClass(m.hoverClass + " " + m.focusClass + " " + m.activeClass);
                            o.removeClass(m.checkedClass);
                            if (p.is(":checked")) {
                                o.addClass(m.checkedClass)
                            }
                            if (p.is(":disabled")) {
                                r.addClass(m.disabledClass)
                            } else {
                                r.removeClass(m.disabledClass)
                            }
                        } else {
                            if (p.is(":file")) {
                                var r = p.parent("div");
                                var q = p.siblings(m.filenameClass);
                                btnTag = p.siblings(m.fileBtnClass);
                                r.removeClass(m.hoverClass + " " + m.focusClass + " " + m.activeClass);
                                q.text(p.val());
                                if (p.is(":disabled")) {
                                    r.addClass(m.disabledClass)
                                } else {
                                    r.removeClass(m.disabledClass)
                                }
                            } else {
                                if (p.is(":submit") || p.is(":reset") || p.is("button") || p.is("a") || n.is("input[type=button]")) {
                                    var r = p.closest("div");
                                    r.removeClass(m.hoverClass + " " + m.focusClass + " " + m.activeClass);
                                    if (p.is(":disabled")) {
                                        r.addClass(m.disabledClass)
                                    } else {
                                        r.removeClass(m.disabledClass)
                                    }
                                }
                            }
                        }
                    }
                }
            })
        };
        return this.each(function () {
            if (a.support.selectOpacity) {
                var n = a(this);
                if (n.is("select")) {
                    if (n.attr("multiple") != true) {
                        if (n.attr("size") == undefined || n.attr("size") <= 1) {
                            e(n)
                        }
                    }
                } else {
                    if (n.is(":checkbox")) {
                        f(n)
                    } else {
                        if (n.is(":radio")) {
                            c(n)
                        } else {
                            if (n.is(":file")) {
                                h(n)
                            } else {
                                if (n.is(":text, :password, input[type='email']")) {
                                    l(n)
                                } else {
                                    if (n.is("textarea")) {
                                        g(n)
                                    } else {
                                        if (n.is("a") || n.is(":submit") || n.is(":reset") || n.is("button") || n.is("input[type=button]")) {
                                            k(n)
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        })
    }
})(jQuery);
ess.displayPrice = function (b, a) {
    b.up().style.display = "none";
    b.up().next().style.display = "block"
};
ess.quickshop = (location.search.search("quickshop=1") > -1);
ess.createPrint = function () {
    var b = $("prodTools");
    if (!b) {
        return
    }
    var a = $(document.createElement("dd"));
    a.update(ess.locale.printThisPage);
    a.addClassName("print");
    a.observe("click", function () {
        print()
    });
    b.appendChild(a)
};
ess.addToCartBtnId = "add-to-cart";
ess.unavailable = false;
ess.validateProduct = function (f) {
    var h = true;
    var y = $("colorContainer");
    var w = $("quantityContainer");
    var d = $("sizeContainer");
    try {
        var B = y.select(".error");
        var b = w.select(".error");
        var m = d.select(".error")
    } catch (e) { }
    var a = [B, m, b];
    for (var t = 0; t < a.length; t++) {
        var l = a[t];
        for (var s = 0; s < l.length; s++) {
            l[s].remove()
        }
    }
    var o = jQuery("#color");
    var A = jQuery("#size");
    var q = jQuery("#cart-error");
    var x = jQuery("#quantity-error");
    q.css("display", "none");
    jQuery("#sizeContainer").removeClass("error");
    jQuery(".cart-continue").css("display", "none");
    jQuery("#quantity-error").css("display", "none");
    if (A.val() == "" || A.val() == ess.locale.selectSize) {
        q.css("display", "block");
        jQuery("#sizeContainer").addClass("error");
        q.html(ess.locale.errSelSize);
        return false
    } else {
        var k = $("skuId");
        if (!k) {
            k = $(document.createElement("input"));
            k.id = "skuId";
            k.name = "skuId";
            k.type = "hidden";
            $("addToCartForm").appendChild(k)
        }
        var v = o.attr("value");
        var r = jQuery("#size option:selected").text();
        if (r == "") {
            r = jQuery("#size-span").text()
        }
        if (v == "undefined") {
            var u = jQuery("#colorName").text();
            v = ess.allColors[u].code;
            o.attr("value", v)
        }
        var g = ess.getSkuByColorAndSize(v, r);
        if (g !== "") {
            k.value = g
        } else {
            var p = "";
            if (A.length > 0) {
                p = A.attr("value")
            } else {
                p = jQuery("#sizeHidden").attr("value")
            }
            k.value = p.substr(p.indexOf("|") + 1);
            if (k.value == "") {
                k.value = jQuery("#sizeHidden2").attr("value")
            }
        }
        var z = ess.getQuantityByColorAndSize(v, r);
        var n = jQuery("#quantity").val();
        if (parseInt(n) > parseInt(z)) {
            x.css("display", "block");
            var c = jQuery("h4.product-title").html();
            var u = ess.getColorNameFromCode(jQuery("#color").val());
            var r = jQuery("#size option:selected").text();
            errorText = ess.locale.errItemSizeQuan.replace("{0}", c);
            errorText = errorText.replace("{1}", u);
            errorText = errorText.replace("{2}", r);
            x.html(errorText);
            return false
        }
        if (z == 0) {
            q.css("display", "block");
            q.html(ess.locale.itemUnavilable);
            ess.unavailable = true;
            A.css("display", "none");
            o.css("display", "none");
            jQuery("#quantity").css("display", "none");
            return false
        }
    } if (o.attr("value") == "" || o.attr("value") == ess.locale.selectColor) {
        q.css("display", "block");
        q.html(ess.locale.colorError);
        return false
    }
    return h
};
ess.getPriceBySku = function (a) {
    for (i = 0; i < ess.productJSON.skus.length; i++) {
        if (ess.productJSON.skus[i].sku_id == a) {
            return ess.productJSON.skus[i].price.current
        }
    }
};
ess.updateColorSkus = function (a) {
    var c = jQuery("#size");
    if (c.length > 0) {
        jQuery.each(jQuery("#size option"), function (e, d) {
            if (ess.product.p) {
                jQuery.each(ess.product.p.skus, function (f, g) {
                    if (g != null) {
                        if (a == g.colorCode && d.text.toLowerCase() === g.size.toLowerCase()) {
                            d.value = ess.product.p.productId + "|" + g.sku_id
                        }
                    }
                })
            }
        })
    } else {
        var b = jQuery("#size-span");
        if (ess.product.p) {
            jQuery.each(ess.product.p.skus, function (d, e) {
                if (e != null) {
                    if (a == e.colorCode && b.text() === e.size) {
                        jQuery("#sizeHidden").val(ess.product.p.productId + "|" + e.sku_id)
                    }
                }
            })
        }
    }
};
ess.getColorNameFromCode = function (a) {
    if (ess.productJSON.superPid == true) {
        var b = ess.allStyles[ess.poloCustomProduct.selectedChildPid]
    } else {
        var b = ess.allStyles
    }
    for (i = 0; i < b.length; i++) {
        if (b[i].colorCode == a) {
            return b[i].colorName
        }
    }
    return ""
};
jQuery(document).ready(function () {
    jQuery("#quantity").uniform();
    ess.product = new ess.Product(ess.productJSON);
    jQuery(".quickshop-confirm a.close").live("click", function (l) {
        l.preventDefault();
        ess.minicart.close()
    });
    jQuery(".quickshop .product-link, .quickshop .product-title a").click(function (o) {
        o.preventDefault();
        var l = jQuery(".swatches li.selected").attr("value");
        var m = jQuery(".size-buttons li.selected").text().replace(jQuery(".size-buttons li.selected span").text(), "");
        var n = jQuery(this).attr("href").replace(/(&color=([^&]+)|&size=([^&]+))+/, "") + "&color=" + l + "&size=" + m;
        window.parent.location = n
    });
    jQuery(".quickshop-confirm .view-cart").live("click", function (l) {
        l.preventDefault();
        window.parent.location = jQuery(this).attr("href")
    });
    jQuery(".close-quickshop").click(function (l) {
        l.preventDefault();
        parent.jQuery.fancybox.close()
    });
    jQuery("#add-to-cart").click(function (m) {
        m.preventDefault();
        if (!jQuery(this).hasClass("disabled")) {
            ess.minicart.close();
            jQuery(this).addClass("disabled");
            if (ess.validateProduct()) {
                var l = {
                    productId: $F("productId"),
                    skuId: $F("skuId"),
                    quantity: $F("quantity")
                };
                jQuery(".added-to-wishlist, #added-to-wishlist").hide();
                ShoppingCartServiceWrapper.add("AddStandardItem", l, function (q) {
                    if (q[0].toString() == "OK") {
                        ess.minicart.show(true, ess.minicart.animate, l.quantity);
                        ess.addToCartQuantity = l.quantity;
                        try {
                            var o = _gat._getTracker(ess.googleAccountId);
                            o._trackEvent("Visitor Actions", "Add to Cart", "Product Detail Page");
                            o._trackEvent("Shopping Cart", "sc Open");
                            o._trackPageview()
                        } catch (p) { }
                        $(document).fire("es:product-add-to-cart", {
                            mfgStyleCode: "pvcs-msc",
                            type: "STANDARD",
                            available: true,
                            event: "addItem",
                            cartAddSrc: "PD",
                            skuId: l.skuId,
                            quantity: l.quantity,
                            id: l.productId
                        });
                        jQuery("#quantity").val(1);
                        jQuery("#quantity").change();
                        jQuery(".size-buttons li.selected").removeClass("selected");
                        ess.updateSizeOptions()
                    } else {
                        if (q[0].toString() == "QUANTITY_NOT_AVAILABLE") {
                            var t = jQuery("#quantity-error");
                            t.css("display", "block");
                            var u = jQuery("h4.product-title").html();
                            var v = ess.getColorNameFromCode(jQuery("#color").val());
                            var n = jQuery("#size option:selected").text();
                            if (n == "") {
                                n = jQuery("#size-span").text()
                            }
                            if (v == "undefined" || v == "") {
                                var v = jQuery("#colorName").text()
                            }
                            var r = n.indexOf("-");
                            if (r > -1) {
                                n = n.substr(0, r - 1)
                            }
                            var s = "ERROR. The item " + u + " in " + v + " size " + n + " is not available in the quantity selected. Please select a lesser quantity.";
                            t.html(s);
                            jQuery(m.target).removeClass("disabled")
                        }
                    }
                })
            } else {
                jQuery(this).removeClass("disabled")
            }
        }
    }).css("visibility", "visible");
    jQuery("#alternate-images li").click(function (n) {
        var o = "";
        var m = jQuery(this).attr("id");
        if (ess.scene7enabled) {
            for (var l = 0; l < ess.scene7Alternate.length; l++) {
                if (ess.scene7Alternate[l].name == m) {
                    ess.displayScene7Image(ess.buildScene7ImageURL(ess.scene7Alternate[l].zoomUri));
                    return true
                }
            }
        }
        for (var l = 0; l < ess.productJSON.alternateViews.length; l++) {
            if (ess.productJSON.alternateViews[l].viewId == m) {
                if (ess.quickshop) {
                    o = (ess.productJSON.alternateViews[l].quickshopImageURL != undefined) ? ess.productJSON.alternateViews[l].quickshopImageURL : ess.productJSON.alternateViews[l].enhancedImageURL;
                    jQuery(".quickshop .viewer").html("<img title='" + ess.productJSON.mainImageAlt + "' alt='" + ess.productJSON.mainImageAlt + "' src='" + o + "' class='base' id='mainProductImage'>");
                    if (ess.productJSON.alternateViews[l].quickshopImageURL == undefined) {
                        jQuery("#mainProductImage").css("width", "208px")
                    }
                } else {
                    jQuery("#zoom").html("<img title='" + ess.productJSON.mainImageAlt + "' alt='" + ess.productJSON.mainImageAlt + "' src='" + ess.productJSON.alternateViews[l].enhancedImageURL + "' class='base' id='mainProductImage'>")
                }
            }
        }
        return true
    });
    if ($("zoom-lightbox")) {
        var f = $("zoom-lightbox");
        f.observeProductColorChange = f.observeProductViewChange = function (m) {
            var n = m.getCurrentView();
            var l = jQuery("#imgZoom");
            if (n != null && n.zoomImageURL != undefined && n.zoomImageURL != "") {
                l.attr("src", n.zoomImageURL)
            } else {
                if (n != null && n.enhancedImageURL != undefined && n.enhancedImageURL != "") {
                    l.attr("src", n.enhancedImageURL)
                } else {
                    l.attr("src", m.p.zoomImageURL)
                }
            }
        };
        ess.product.addViewChangeListener(f);
        if (ess.poloCustomProduct === undefined) {
            ess.product.addColorChangeListener(f)
        }
    }
    var e = $("mainProductImage");
    if (e) {
        e.observeProductViewChange = function (n) {
            var o = n.getCurrentView();
            if (o != null && o.enhancedImageURL != undefined && o.viewId != undefined && o.viewId.indexOf("alternate") > -1) {
                this.src = o.enhancedImageURL.replace("_dt", ess.quickshop ? "_t208" : "_enh-z6")
            } else {
                if (o != null && o.mainImageURL != undefined) {
                    this.src = ess.quickshop ? o.quickShopImageURL : o.mainImageURL
                } else {
                    var l = 0;
                    if (ess.productJSON.superPid == true) {
                        var m = ess.product.p.colorSliceValues[ess.poloCustomProduct.selectedChildPid]
                    } else {
                        var m = ess.product.p.colorSliceValues
                    }
                    for (j = 0; j < m.length; j++) {
                        if (m[j] != null) {
                            break
                        }
                    }
                    this.src = m[j].mainImageURL
                }
            }
        };
        ess.product.addViewChangeListener(e)
    }
    var b = $("availability-msg");
    if (b) {
        b.observeProductSkuChange = function (m) {
            if (m.skuId != null && m.skuId != "") {
                var n = m.getSkuById(m.skuId).availShipEstMessage;
                this.innerHTML = n
            }
            var l = m.getSkuById(m.skuId).avail == "NOT_AVAILABLE";
            if ($(ess.addToCartBtnId)) {
                toggleBtn($(ess.addToCartBtnId), l)
            }
        };
        ess.product.addSkuChangeListener(b)
    }
    if ($("color")) {
        var c = $("color");
        c.observe("change", function (l) {
            ess.changeColor()
        });
        c.observeProductColorChange = function (l) {
            c.value = l.colorId;
            if (l.colorId == "") {
                jQuery("#color option").eq(0).attr("selected", "selected")
            }
        };
        ess.product.addColorChangeListener(c)
    }
    if ($("size")) {
        var k = $("size");
        k.selectedIndex = 0;
        k.observe("change", function (l) {
            ess.changeSize()
        })
    }
    if ($("prod_0")) {
        $("prod_0").observeProductSkuChange = function (l) {
            jQuery("#prod_0").val(l.p.productId + "|" + l.skuId)
        };
        ess.product.addSkuChangeListener($("prod_0"));
        if ($("prod_0").tagName.toLowerCase() == "input" && ess.product.p != undefined) {
            $("prod_0").value = ess.product.p.productId + "|" + ess.product.skuId
        }
    }
    ess.changeColor = function () {
        var m = $("color").value;
        var l = false;
        var o = "";
        if (ess.scene7enabled == true) {
            for (var n = 0; n < ess.productJSON.colorSliceValues.length; n++) {
                if (ess.productJSON.colorSliceValues[n].colorId == m && ess.productJSON.colorSliceValues[n].zoomImageURL != undefined && ess.productJSON.colorSliceValues[n].zoomImageURL != "") {
                    l = true
                }
            }
        }
        AltImages.init(m);
        if (l) {
            ess.setZoomColor(m);
            swapScene7OnClick(m)
        } else {
            for (var n = 0; n < ess.productJSON.colorSliceValues.length; n++) {
                if (ess.productJSON.colorSliceValues[n].colorId == m) {
                    o = ess.productJSON.colorSliceValues[n][ess.quickshop ? "quickShopImageURL" : "mainImageURL"]
                }
            }
            if (ess.quickshop) {
                jQuery("#mainProductImage").attr({
                    title: ess.productJSON.mainImageAlt,
                    alt: ess.productJSON.mainImageAlt,
                    src: o
                })
            } else {
                jQuery("#zoom").html("<img title='" + ess.productJSON.mainImageAlt + "' alt='" + ess.productJSON.mainImageAlt + "' src='" + o + "' class='base' id='mainProductImage'>")
            }
        }
    };
    ess.changeSize = function () {
        if (ess.slicedBy == "color") {
            return
        }
        var n = $("size");
        if (n.selectedIndex > 0) {
            var l = ess.filterSizeColorValue(n.options[n.selectedIndex].text);
            var m = ess.getColorsBySize(l);
            ess.updateColorOptions(m)
        } else {
            ess.updateColorOptions()
        } if (jQuery("#color").length) {
            var o = jQuery("#color option").eq(0).val();
            ess.setColorSelection(o);
            if (ess.poloCustomProduct !== undefined) {
                ess.initializeCYOSteps(o)
            }
        }
        if (jQuery("#narrow-by-select").length) {
            ess.updateNarrowByOptions()
        }
    };
    var d = jQuery("#wishlist-button");
    d.click(function (m) {
        m.preventDefault();
        var l = d.attr("href");
        if (l.substr(l.length - 4) == ".jsp") {
            jQuery("#addToCartForm").attr("action", l)
        }
        if (ess.validateProduct()) {
            jQuery(".added-to-wishlist, #added-to-wishlist").hide();
            ClubmcLoginInfoWrapper.getUserNamesEmail(function (n) {
                jQuery.ajax({
                    type: "POST",
                    url: "/wishlist/add.jsp",
                    data: jQuery("#addToCartForm").serialize(),
                    complete: function (o) {
                        if (n) {
                            jQuery(".added-to-wishlist").show();
                            jQuery(".size-buttons li.selected").removeClass("selected");
                            ess.updateSizeOptions();
                            jQuery("#quantity").val(1);
                            jQuery("#quantity").change()
                        } else {
                            if (ess.quickshop) {
                                jQuery(".quickshop").css("visibility", "hidden");
                                var p = document.getElementById("addToCartForm");
                                p.submit();
                                parent.window.location = "/login.jsp"
                            } else {
                                jQuery("#addToCartForm").submit()
                            }
                        }
                    }
                })
            })
        }
    }).css("visibility", "visible");
    ess.createTabs("tabset");
    ess.createPrint();
    if ($("addToCartForm") && ($("product").hasClassName("cyo") == false && $("product").hasClassName("collection") == false)) {
        $("addToCartForm").onsubmit = function (l) {
            return ess.validateProduct()
        }
    }
    if ($("recent-history") && $("product-tip")) {
        var g = $("product-tip");
        $$("ul#rv-products .hproduct").each(function (l) {
            l.observe("mouseover", function (n) {
                var o = Event.findElement(n, ".hproduct");
                g.clonePosition(o, {
                    setWidth: false,
                    setHeight: false,
                    offsetTop: -80,
                    offsetLeft: 60
                });
                var m = o.down(".product-tip-content").innerHTML;
                g.down(".tt-inner").innerHTML = m;
                g.addClassName("show")
            });
            l.observe("mouseout", function (m) {
                g.removeClassName("show")
            })
        });
        g.observe("mouseover", function (l) {
            g.addClassName("show")
        });
        g.observe("mouseout", function (l) {
            g.removeClassName("show")
        })
    }
    jQuery(".related-tip").mousemove(function (m) {
        var l = jQuery(this);
        if (!l.data("showing")) {
            l.data("x", m.pageX);
            l.data("y", m.pageY)
        }
    }).tooltip({
        onBeforeShow: function () {
            jQuery(document.body).append(this.getTip())
        },
        onShow: function () {
            var m = this.getTrigger();
            m.data("tooltip", this.getTip());
            m.data("showing", true);
            var l = m.data("x");
            var n = m.data("y");
            this.getTip().css({
                top: (n + 15),
                left: (l + 15)
            }).show();
            this.getTip().dropShadow()
        },
        onBeforeHide: function () {
            this.getTrigger().data("showing", false);
            this.getTip().removeShadow()
        },
        predelay: 200
    });
    jQuery(".recently-viewed-tip").mousemove(function (n) {
        var l = jQuery(this);
        if (l.data("showing")) {
            var m = l.data("tooltip");
            m.css({
                top: (n.pageY + 15),
                left: (n.pageX + 15)
            });
            m.redrawShadow()
        } else {
            l.data("x", n.pageX);
            l.data("y", n.pageY)
        }
    }).tooltip({
        predelay: 200,
        onBeforeShow: function () {
            jQuery(document.body).append(this.getTip())
        },
        onShow: function () {
            var m = this.getTrigger();
            m.data("tooltip", this.getTip());
            m.data("showing", true);
            var l = m.data("x");
            var n = m.data("y");
            this.getTip().css({
                top: (n + 15),
                left: (l + 15)
            }).show();
            this.getTip().dropShadow()
        },
        onBeforeHide: function () {
            this.getTrigger().data("showing", false);
            this.getTip().removeShadow()
        }
    });
    var a = 0;
    if (jQuery("body").hasClass("shopByLook")) {
        selectedCarouselItem = jQuery("#shopByLook-carousel-items li.selected");
        carouselLength = jQuery("#shopByLook-carousel-items li").length;
        a = selectedCarouselItem.index() + 1;
        if (a > (carouselLength - 3)) {
            a = carouselLength - 3
        }
        a -= 1;
        if (a != 0) {
            jQuery(".carousel-wrapper .prev").removeClass("disabled")
        }
        if (a >= carouselLength - 4) {
            jQuery(".carousel-wrapper .next").addClass("disabled")
        }
    }
    var h = jQuery(".carousel");
    if (h.find("li").length > 4) {
        h.carousel({
            visible: 4,
            btnNext: ".next",
            btnPrev: ".prev",
            circular: false,
            start: a
        })
    } else {
        jQuery(".carousel-wrapper").find("button.next, button.prev").css("visibility", "hidden")
    }
    jQuery("#shopByLook-carousel-items").on("click", "li", function () {
        jQuery(this).parent().children().removeClass("selected");
        jQuery(this).addClass("selected")
    });
    jQuery(".minicart .close").live("click", function (m) {
        m.preventDefault();
        var l = jQuery("#ins1");
        l.removeShadow();
        l.hide()
    });
    jQuery("#socialmedia_share_button").mouseover(function (l) {
        if (jQuery.browser.msie && jQuery.browser.version == 7) {
            jQuery(".shopByLook .fblike-share-stl, .shopByLook .fb_iframe_widget iframe").css("width", 130)
        }
        jQuery("#socialmedia_share_float").fadeIn();
        jQuery("#socialmedia_share_button").fadeOut()
    });
    jQuery("#socialmedia_share_float").mouseleave(function (l) {
        if (jQuery.browser.msie && jQuery.browser.version == 7) {
            jQuery(".shopByLook .fblike-share-stl, .shopByLook .fb_iframe_widget iframe").css("width", "")
        }
        jQuery("#socialmedia_share_button").fadeIn();
        jQuery("#socialmedia_share_float").fadeOut()
    });
    jQuery("div.share-section a.email").click(function (l) {
        l.preventDefault();
        jQuery('<iframe class="share-with-a-friend" frameBorder="0" scrolling="no" src="' + jQuery(this).attr("href") + '" />').appendTo(jQuery("#content-wrap"));
        jQuery("iframe.share-with-a-friend").dropShadow()
    })
});
if (ess) { } else {
    var ess = {}
}
ess.Product = function (a) {
    this.p = a;
    this.colorId = "";
    this.skuId = "";
    this.quantity = 0;
    this.colorChangeListeners = new Array();
    this.viewChangeListeners = new Array();
    this.qtyChangeListeners = new Array();
    this.skuChangeListeners = new Array();
    this.viewIndex = 0;
    this.currentView = this;
    this.currentColorSlice = null;
    this.addColorChangeListener = function (b) {
        this.colorChangeListeners[this.colorChangeListeners.length] = b
    };
    this.addQtyChangeListener = function (b) {
        this.qtyChangeListeners[this.qtyChangeListeners.length] = b
    };
    this.addSkuChangeListener = function (b) {
        this.skuChangeListeners[this.skuChangeListeners.length] = b
    };
    this.addViewChangeListener = function (b) {
        this.viewChangeListeners[this.viewChangeListeners.length] = b
    };
    this.changeColor = function (c) {
        this.colorId = c;
        this.currentColorSliceValue = null;
        for (var b = 0; b < this.p.colorSliceValues.length; b++) {
            if (this.p.colorSliceValues[b] != null && this.p.colorSliceValues[b].colorId == this.colorId) {
                this.currentColorSliceValue = this.p.colorSliceValues[b];
                break
            }
        }
        if (this.colorId != "" && this.getCurrentColorSliceValue() != null) {
            this.changeSku(this.getCurrentColorSliceValue().availableSkuIds[0]);
            this.changeView(0)
        }
        for (var b = 0; b < this.colorChangeListeners.length; b++) {
            this.colorChangeListeners[b].observeProductColorChange(this)
        }
        if (ess.poloCustomProduct !== undefined) {
            ess.initializeCYOSteps(c)
        }
    };
    this.changeSku = function (b) {
        this.skuId = b;
        for (var c = 0; c < this.skuChangeListeners.length; c++) {
            this.skuChangeListeners[c].observeProductSkuChange(this)
        }
    };
    this.changeView = function (b) {
        this.viewIndex = b;
        if (b == 0 && this.getCurrentColorSliceValue() == null) {
            this.currentView = this
        } else {
            this.currentView = null;
            if (this.getCurrentColorSliceValue() != null) {
                if (b == 0) {
                    this.currentView = this.getCurrentColorSliceValue()
                } else {
                    this.currentView = this.p.alternateViews[b - 1]
                }
            }
            if (this.currentView == null) {
                if (this.p.alternateViews.length > b - 1) {
                    this.currentView = this.p.alternateViews[b - 1];
                    if (this.currentView == null) {
                        this.currentView = this.p.alternateViews[b]
                    }
                } else {
                    if (this.p.alternateViews.length > 0) {
                        this.currentView = this.p.alternateViews[0]
                    } else {
                        this.currentView = this
                    }
                }
            }
        }
        for (var c = 0; c < this.viewChangeListeners.length; c++) {
            this.viewChangeListeners[c].observeProductViewChange(this)
        }
    };
    this.getAvailableSizes = function () {
        var d = new Array();
        if (this.colorId != "") {
            var c = this.getCurrentColorSliceValue().availableSkuIds;
            for (var b = 0; b < c.length; b++) {
                d[b] = this.getSkuById(c[b]).size
            }
        }
        return d
    };
    this.getCurrentColorSliceValue = function () {
        return this.currentColorSliceValue
    };
    this.getCurrentView = function () {
        return this.currentView
    };
    this.getSkuById = function (c) {
        for (var b = 0; b < this.p.skus.length; b++) {
            if (this.p.skus[b].sku_id == c) {
                return this.p.skus[b]
            }
        }
        return null
    };
    this.setQuantity = function (c) {
        this.quantity = c;
        for (var b = 0; b < this.qtyChangeListeners.length; b++) {
            this.qtyChangeListeners[b].observeProductQtyChange(this)
        }
    }
};